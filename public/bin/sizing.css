/**
 * jeffreybarron/WebflowStyling
 * Copyright 2023 Jeffrey Barron
 * Released under the MIT License
 * Released on: October 12 2023
 * Comment Inspired by a combination of systems including Tailwindcss, Lumos, and others
 
Webflow have recently provided functionality for ReactJS integration.
Tailwindcss popular formating framework in nodejs/ReactJS developement. 
Therefore, to hopefully ensure consistent sizing across my webflow and react projects
I have elected to implement Tailwindcss spacing for my Webflow via CSS
https://tailwindcss.com/docs/customizing-spacing#default-spacing-scale
Name | Size    | Pixels
1    | 0.25rem | 4px
2    | 0.5rem  | 8px
3    | 0.75rem | 12ox
4    | 1rem    | 16px
size-factor is a multiplier used to scale all variables equally

*/

html {
  --size-factor: 1;
  --size0-5: calc(0.125rem * var(--size-factor));
  --size1: calc(0.25rem * var(--size-factor));
  --size1-5: calc(0.375rem * var(--size-factor));
  --size2: calc(0.5rem * var(--size-factor));
  --size2-5: calc(0.625rem * var(--size-factor));
  --size3: calc(0.75rem * var(--size-factor));
  --size3-5: calc(0.875rem * var(--size-factor));
  --size4: calc(1rem * var(--size-factor));
  --size5: calc(1.25rem * var(--size-factor));
  --size6: calc(1.5rem * var(--size-factor));
  --size7: calc(1.75rem * var(--size-factor));
  --size8: calc(2rem * var(--size-factor));
  --size10: calc(2.5rem * var(--size-factor));
  --size12: calc(3rem * var(--size-factor));
  --size14: calc(3.5rem * var(--size-factor));
  --size16: calc(4rem * var(--size-factor));
  --size20: calc(5rem * var(--size-factor));
  --size24: calc(6rem * var(--size-factor));
}
